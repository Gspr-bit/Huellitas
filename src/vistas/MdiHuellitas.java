/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import huellitas.*;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.sql.Blob;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alumno
 */
public class MdiHuellitas extends javax.swing.JFrame {
    private final Validaciones validar;
    private final Adopcion adopcion;
    private final AlbergueTemporal alTemporal;
    private final AnimalPerdido alPerdido;
    private final AnimalEncontrado alEncontrado;
    private final Animal animal;
    private final Notificaciones notificacion;    
    private final Sesion sesion;
    private final Organizacion asociacion;

    private jifAgregarAlTemporal agregarTemporal;
    private jifConsultarAlTemporal consultarTemporal;
    private jifModificarAlTemporal modificarTemporal;
    private jifAgregarAlPermanente agregarPermanente;
    private jifConsultarAlPermanente consultarPermanente;
    private jifModificarAlPermanente modificarPermanente;
    private jifAgregarAlExtraviado agregarExtraviado;
    private jifConsultarAlExtraviado consultarExtraviado;
    private jifModificarAlExtraviado modificarExtraviado;
    private jifAgregarAlEncontrado agregarEncontrado;
    private jifConsultarAlEncontrado consultarEncontrado;
    private jifModificarAlEncontrado modificarEncontrado;
    private jifAgregarAdopcion agregarAdoptado;
    private jifConsultarAdopcion consultarAdoptado;
    private jifModificarAdopcion modificarAdoptado;
    private jifConfigurar configurar;
    private jifModificar modificar;
    private final jifNotificaciones notificaciones = new jifNotificaciones();
    private final frmLogIn LogIn = new frmLogIn();
    private final MdiLineaDeComandos lineaComandos = new MdiLineaDeComandos();

    private int filaSelec = -1;
    private final Vector<Integer> indice = new Vector<Integer>(1, 1);
    private ImageIcon icono;
    private int idAnimal;
    private int id;
    int i = 0;
    private String sesionIniciada;
    private boolean isRoot;
    private int opcionSelec;

    private ResultSet rs;
    
    public int getFilaSelec() {
        return filaSelec;
    }

    public void setFilaSelec(int filaSelec) {
        this.filaSelec = filaSelec;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getSesionIniciada() {
        return sesionIniciada;
    }

    public void setSesionIniciada(String sesionIniciada) {
        this.sesionIniciada = sesionIniciada;
    }

    public boolean isIsRoot() {
        return isRoot;
    }

    public void setIsRoot(boolean isRoot) {
        this.isRoot = isRoot;
    }

    public int getOpcionSelec() {
        return opcionSelec;
    }

    public void setOpcionSelec(int opcionSelec) {
        this.opcionSelec = opcionSelec;
    }
    
    /**
     * /**
     * Creates new form NewMDIApplication
     */
    public MdiHuellitas() {
        validar = new Validaciones();
        adopcion = new Adopcion();
        alTemporal = new AlbergueTemporal();
        alPerdido = new AnimalPerdido();
        alEncontrado = new AnimalEncontrado();
        animal = new Animal();
        notificacion = new Notificaciones();    
        sesion = new Sesion();
        asociacion = new Organizacion();
                
        initComponents();
        myInitComponents();
        llenarTabla();
        setOpcionSelec(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        btnNotificaciones = new javax.swing.JButton();
        btnConfiguracion = new javax.swing.JButton();
        btnUsuarios = new javax.swing.JButton();
        btnCambiar = new javax.swing.JButton();
        lblUsuario = new javax.swing.JLabel();
        btnAyuda = new javax.swing.JButton();
        btnComandos = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnAdopcion = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnVer = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cboMostrar = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cboOrdenar = new javax.swing.JComboBox<>();
        lblTitulo = new javax.swing.JLabel();
        cboOrdenar2 = new javax.swing.JComboBox<>();
        btnBuscar = new javax.swing.JButton();
        txtBuscar = new javax.swing.JTextField();
        lblResultado = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAnimales = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Huellitas");
        setExtendedState(6);
        setMinimumSize(new java.awt.Dimension(1028, 500));

        desktopPane.setMinimumSize(new java.awt.Dimension(1000, 500));
        desktopPane.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentRemoved(java.awt.event.ContainerEvent evt) {
                desktopPaneComponentRemoved(evt);
            }
        });
        desktopPane.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                desktopPaneComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                desktopPaneComponentShown(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        btnNotificaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNotificacionesActionPerformed(evt);
            }
        });

        btnConfiguracion.setToolTipText("Configuración");
        btnConfiguracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfiguracionActionPerformed(evt);
            }
        });

        btnUsuarios.setToolTipText("Agregar o eliminar otros usuarios");
        btnUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuariosActionPerformed(evt);
            }
        });

        btnCambiar.setToolTipText("Cerrar sesión");
        btnCambiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCambiarActionPerformed(evt);
            }
        });

        lblUsuario.setFont(new java.awt.Font("Patrick Hand SC", 1, 14)); // NOI18N
        lblUsuario.setForeground(new java.awt.Color(255, 255, 255));
        lblUsuario.setText("jLabel3");

        btnAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAyudaActionPerformed(evt);
            }
        });

        btnComandos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComandosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAyuda)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnComandos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCambiar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUsuarios)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConfiguracion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNotificaciones)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblUsuario)
                    .addComponent(btnCambiar)
                    .addComponent(btnUsuarios)
                    .addComponent(btnConfiguracion)
                    .addComponent(btnNotificaciones)
                    .addComponent(btnAyuda)
                    .addComponent(btnComandos))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnAdopcion.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        btnAdopcion.setText("Dar en adopción");
        btnAdopcion.setToolTipText("Dar en adopción al registro seleccionado");
        btnAdopcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdopcionActionPerformed(evt);
            }
        });

        btnAgregar.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        btnAgregar.setText("Agregar nuevo");
        btnAgregar.setToolTipText("Agregar un nuevo registro en la tabla seleccionada");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setToolTipText("Eliminar el registro seleccionado");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnVer.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        btnVer.setText("Ver");
        btnVer.setToolTipText("Ver la información del registro seleccionado");
        btnVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerActionPerformed(evt);
            }
        });

        btnRegresar.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        btnRegresar.setText("Regresar al dueño");
        btnRegresar.setToolTipText("Regresar al dueño al registro seleccionado");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        btnModificar.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.setToolTipText("Modificar la información del registro seleccionado");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRegresar)
                    .addComponent(btnAdopcion, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVer, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAgregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdopcion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegresar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Mostrar en:");

        cboMostrar.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        cboMostrar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Albergue temporal", "Albergue permanente", "Extraviados", "Encontrados", "Adoptados" }));
        cboMostrar.setToolTipText("Selecciona la ubicación a mostrar");
        cboMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMostrarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Ordenar por:");

        cboOrdenar.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        cboOrdenar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fecha", "Edad", "Tamaño", "Especie", "Sexo" }));
        cboOrdenar.setToolTipText("Selecciona un filtro");
        cboOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboOrdenarActionPerformed(evt);
            }
        });

        lblTitulo.setFont(new java.awt.Font("Amatic SC", 1, 48)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setText("Animales");

        cboOrdenar2.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        cboOrdenar2.setToolTipText("Selecciona un filtro");
        cboOrdenar2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboOrdenar2ItemStateChanged(evt);
            }
        });
        cboOrdenar2.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cboOrdenar2PopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        cboOrdenar2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboOrdenar2MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cboOrdenar2MouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cboOrdenar2MouseReleased(evt);
            }
        });
        cboOrdenar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboOrdenar2ActionPerformed(evt);
            }
        });

        btnBuscar.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.setToolTipText("");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        txtBuscar.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtBuscar.setToolTipText("Escribe aquí para buscar");
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        lblResultado.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        lblResultado.setForeground(new java.awt.Color(255, 255, 255));
        lblResultado.setText("Se encontraron");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cboOrdenar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscar)
                        .addGap(18, 18, 18)
                        .addComponent(lblResultado))
                    .addComponent(lblTitulo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(cboOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboOrdenar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(cboMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblResultado))
                .addContainerGap())
        );

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jScrollPane1KeyTyped(evt);
            }
        });

        tblAnimales.setBackground(new java.awt.Color(0, 0, 0));
        tblAnimales.setFont(new java.awt.Font("Patrick Hand", 1, 14)); // NOI18N
        tblAnimales.setForeground(new java.awt.Color(255, 255, 255));
        tblAnimales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAnimales.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblAnimales.setGridColor(new java.awt.Color(255, 255, 255));
        tblAnimales.setSelectionBackground(new java.awt.Color(51, 51, 51));
        tblAnimales.setShowVerticalLines(false);
        tblAnimales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAnimalesMouseClicked(evt);
            }
        });
        tblAnimales.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tblAnimalesKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(tblAnimales);
        if (tblAnimales.getColumnModel().getColumnCount() > 0) {
            tblAnimales.getColumnModel().getColumn(0).setResizable(false);
            tblAnimales.getColumnModel().getColumn(0).setPreferredWidth(50);
        }

        desktopPane.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktopPane.setLayer(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktopPane.setLayer(jPanel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktopPane.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout desktopPaneLayout = new javax.swing.GroupLayout(desktopPane);
        desktopPane.setLayout(desktopPaneLayout);
        desktopPaneLayout.setHorizontalGroup(
            desktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(desktopPaneLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(desktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 888, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        desktopPaneLayout.setVerticalGroup(
            desktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(desktopPaneLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(desktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(desktopPaneLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                        .addGap(1, 1, 1))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdopcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdopcionActionPerformed
        // TODO add your handling code here:
        habilitarCajas(false);
        setCursor(Cursor.WAIT_CURSOR);
        agregarAdoptado = new jifAgregarAdopcion(getId(), cboMostrar.getSelectedItem().toString());
        ponerMitad(agregarAdoptado);
        if (cboMostrar.getSelectedIndex() == 0) {
            agregarNotificacion(tblAnimales.getValueAt(getFilaSelec(), 1).toString(), " Albergue temporal ", 2);
        } else {
            agregarNotificacion(tblAnimales.getValueAt(getFilaSelec(), 1).toString(), " Albergue permanente ", 2);
        }
        setCursor(Cursor.DEFAULT_CURSOR);
    }//GEN-LAST:event_btnAdopcionActionPerformed

    private void cboMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMostrarActionPerformed
        // TODO add your handling code here:
        llenarTabla();
    }//GEN-LAST:event_cboMostrarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        this.setCursor(Cursor.WAIT_CURSOR);
        habilitarCajas(false);
        switch (cboMostrar.getSelectedIndex()) {
            case 0: //Albergue temporal
                agregarTemporal = new jifAgregarAlTemporal();
                ponerMitad(agregarTemporal);
                break;
            case 1: //Albergue permanente
                agregarPermanente = new jifAgregarAlPermanente();
                ponerMitad(agregarPermanente);
                break;
            case 2: //Extraviados 
                agregarExtraviado = new jifAgregarAlExtraviado();
                ponerMitad(agregarExtraviado);                
                break;
            case 3: //Encontrados
                agregarEncontrado = new jifAgregarAlEncontrado();
                ponerMitad(agregarEncontrado);
                break;
        }
        setCursor(Cursor.DEFAULT_CURSOR);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void cboOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboOrdenarActionPerformed
        // TODO add your handling code here:
        setOpcionSelec(0);
        llenarTabla();
    }//GEN-LAST:event_cboOrdenarActionPerformed

    private void btnNotificacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNotificacionesActionPerformed
        // TODO add your handling code here:        
        ponerMitad(notificaciones);
        campana(false);
    }//GEN-LAST:event_btnNotificacionesActionPerformed

    private void btnConfiguracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfiguracionActionPerformed
        // TODO add your handling code here:
        configurar = new jifConfigurar(getSesionIniciada());
        ponerMitad(configurar);
    }//GEN-LAST:event_btnConfiguracionActionPerformed

    private void btnUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuariosActionPerformed
        // TODO add your handling code here:
        modificar = new jifModificar(getSesionIniciada());
        ponerMitad(modificar);
    }//GEN-LAST:event_btnUsuariosActionPerformed

    private void btnCambiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCambiarActionPerformed
        // TODO add your handling code here:
        //desktopPane.add(LogIn);
        LogIn.setLocationRelativeTo(null);
        LogIn.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnCambiarActionPerformed

    private void cboOrdenar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboOrdenar2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboOrdenar2ActionPerformed

    private void btnVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerActionPerformed
        // TODO add your handling code here:
        setCursor(Cursor.WAIT_CURSOR);
        habilitarCajas(false);
        switch (cboMostrar.getSelectedIndex()) {
            case 0: //Albergue temporal
                consultarTemporal = new jifConsultarAlTemporal(getId());
                ponerMitad(consultarTemporal);
                break;
            case 1: //Albergue permanente
                consultarPermanente = new jifConsultarAlPermanente(getId());
                ponerMitad(consultarPermanente);
                break;
            case 2: //Perdidos
                consultarExtraviado = new jifConsultarAlExtraviado(getId());
                ponerMitad(consultarExtraviado);
                break;
            case 3: //Encontrados
                consultarEncontrado = new jifConsultarAlEncontrado(getId());
                ponerMitad(consultarEncontrado);
                break;
            case 4: //Adoptados
                consultarAdoptado = new jifConsultarAdopcion(getId());
                ponerMitad(consultarAdoptado);
                break;
        }
        setCursor(Cursor.DEFAULT_CURSOR);
    }//GEN-LAST:event_btnVerActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        llenarTabla();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        // TODO add your handling code here:
        llenarTabla();
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnBuscar.doClick();
        }
    }//GEN-LAST:event_txtBuscarKeyPressed

    private void tblAnimalesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAnimalesMouseClicked
        // TODO add your handling code here:
        setFilaSelec(tblAnimales.getSelectedRow());
        habilitarCajas(getFilaSelec() >= 0);
        setId(indice.elementAt(getFilaSelec()));
    }//GEN-LAST:event_tblAnimalesMouseClicked

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        switch (cboMostrar.getSelectedIndex()) {
            case 0: //Temporal
                if (JOptionPane.showConfirmDialog(this, "¿Esta seguro que quiere eliminar a " + tblAnimales.getValueAt(getFilaSelec(), 1) + "?") == 0) {
                    if (animal.eliminar(indice.elementAt(getFilaSelec())).startsWith("Animal") && alTemporal.eliminar(indice.elementAt(getFilaSelec())).startsWith("Animal")) {
                        JOptionPane.showMessageDialog(this, "Animal eliminado");
                        agregarNotificacion(tblAnimales.getValueAt(getFilaSelec(), 1).toString(), " Albergue temporal ", 0);
                    } else {
                        JOptionPane.showMessageDialog(this, "Ocurrió un error");
                    }
                }
                break;
            case 1: //Permanente
                if (JOptionPane.showConfirmDialog(this, "¿Esta seguro que quiere eliminar a " + tblAnimales.getValueAt(getFilaSelec(), 1) + "?") == 0) {
                    if (animal.eliminar(indice.elementAt(getFilaSelec())).startsWith("Animal")) {
                        JOptionPane.showMessageDialog(this, "Animal eliminado");
                        agregarNotificacion(tblAnimales.getValueAt(getFilaSelec(), 1).toString(), " Albergue permanente ", 0);
                    } else {
                        JOptionPane.showMessageDialog(this, "Ocurrió un error");
                    }
                }
                break;
            case 2: //Perdido
                if (JOptionPane.showConfirmDialog(this, "¿Esta seguro que quiere eliminar a " + tblAnimales.getValueAt(getFilaSelec(), 1) + "?") == 0) {
                    if (animal.eliminar(indice.elementAt(getFilaSelec())).startsWith("Animal") && alPerdido.eliminar(indice.elementAt(getFilaSelec())).startsWith("Animal")) {
                        JOptionPane.showMessageDialog(this, "Animal eliminado");
                        agregarNotificacion(tblAnimales.getValueAt(getFilaSelec(), 1).toString(), " Extraviados ", 0);
                    } else {
                        JOptionPane.showMessageDialog(this, "Ocurrió un error");
                    }
                }
                break;
            case 3: //Encontrado
                if (JOptionPane.showConfirmDialog(this, "¿Esta seguro que quiere eliminar a " + tblAnimales.getValueAt(getFilaSelec(), 1) + "?") == 0) {
                    if (animal.eliminar(indice.elementAt(getFilaSelec())).startsWith("Animal") && alEncontrado.eliminar(indice.elementAt(getFilaSelec())).startsWith("Animal")) {
                        JOptionPane.showMessageDialog(this, "Animal eliminado");
                        agregarNotificacion(tblAnimales.getValueAt(getFilaSelec(), 1).toString(), " Encontrados ", 0);
                    } else {
                        JOptionPane.showMessageDialog(this, "Ocurrió un error");
                    }
                }
                break;
            case 4: //Adoptado
                if (JOptionPane.showConfirmDialog(this, "¿Esta seguro que quiere eliminar a " + tblAnimales.getValueAt(getFilaSelec(), 1) + "?") == 0) {
                    if (animal.eliminar(indice.elementAt(getFilaSelec())).startsWith("Animal") && adopcion.eliminar(indice.elementAt(getFilaSelec())).startsWith("Animal")) {
                        JOptionPane.showMessageDialog(this, "Animal eliminado");
                        agregarNotificacion(tblAnimales.getValueAt(getFilaSelec(), 1).toString(), " Adoptados ", 0);
                    } else {
                        JOptionPane.showMessageDialog(this, "Ocurrió un error");
                    }
                }
                break;
        }

        llenarTabla();
        habilitarCajas(false);
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        this.setCursor(Cursor.WAIT_CURSOR);
        habilitarCajas(false);
        switch (cboMostrar.getSelectedIndex()) {
            case 0: //Temporal
                modificarTemporal = new jifModificarAlTemporal(getId());
                ponerMitad(modificarTemporal);
                agregarNotificacion(tblAnimales.getValueAt(getFilaSelec(), 1).toString(), " Albergue temporal ", 3);
                break;
            case 1: //Permanente
                modificarPermanente = new jifModificarAlPermanente(getId());
                ponerMitad(modificarPermanente);
                agregarNotificacion(tblAnimales.getValueAt(getFilaSelec(), 1).toString(), " Albergue permanente ", 3);
                break;
            case 2: //Perdido
                modificarExtraviado = new jifModificarAlExtraviado(getId());
                ponerMitad(modificarExtraviado);
                agregarNotificacion(tblAnimales.getValueAt(getFilaSelec(), 1).toString(), " Extraviados ", 3);
                break;
            case 3: //Encontrado
                modificarEncontrado = new jifModificarAlEncontrado(getId());
                ponerMitad(modificarEncontrado);
                agregarNotificacion(tblAnimales.getValueAt(getFilaSelec(), 1).toString(), " Encontrados ", 3);
                break;
            case 4: //Adoptado
                modificarAdoptado = new jifModificarAdopcion(getId());
                ponerMitad(modificarAdoptado);
                agregarNotificacion(tblAnimales.getValueAt(getFilaSelec(), 1).toString(), " Adoptados ", 3);
                break;
        }
        this.setCursor(Cursor.DEFAULT_CURSOR);
    }//GEN-LAST:event_btnModificarActionPerformed

    private void tblAnimalesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblAnimalesKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_tblAnimalesKeyTyped

    private void jScrollPane1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jScrollPane1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1KeyTyped

    private void desktopPaneComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_desktopPaneComponentHidden
        // TODO add your handling code here:
        llenarTabla();
    }//GEN-LAST:event_desktopPaneComponentHidden

    private void desktopPaneComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_desktopPaneComponentShown
        // TODO add your handling code here:
        llenarTabla();
    }//GEN-LAST:event_desktopPaneComponentShown

    private void desktopPaneComponentRemoved(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_desktopPaneComponentRemoved
        // TODO add your handling code here:
        llenarTabla();
    }//GEN-LAST:event_desktopPaneComponentRemoved

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        habilitarCajas(false);
        switch (cboMostrar.getSelectedIndex()) {
            case 2: //Perdido
                if (JOptionPane.showConfirmDialog(this, "¿Esta seguro que va a regresar a " + tblAnimales.getValueAt(getFilaSelec(), 1 ) + " con su dueño") == 0) {
                    if (animal.eliminar(indice.elementAt(getFilaSelec())).startsWith("Animal") && alPerdido.eliminar(indice.elementAt(getFilaSelec())).startsWith("Animal")) {
                        JOptionPane.showMessageDialog(this, "Animal devuelto");
                        agregarNotificacion(tblAnimales.getValueAt(getFilaSelec(), 1).toString(), " Extraviados ", 1);
                    } else {
                        JOptionPane.showMessageDialog(this, "Ocurrió un error");
                    }
                }
                break;
            case 3: //Encontrado
                if (JOptionPane.showConfirmDialog(this, "¿Esta seguro que va a regresar a " + tblAnimales.getValueAt(getFilaSelec(), 1) + " con su dueño") == 0) {
                    if (animal.eliminar(indice.elementAt(getFilaSelec())).startsWith("Animal") && alEncontrado.eliminar(indice.elementAt(getFilaSelec())).startsWith("Animal")) {
                        JOptionPane.showMessageDialog(this, "Animal devuelto");
                        agregarNotificacion(tblAnimales.getValueAt(getFilaSelec(), 1).toString(), " Encontrados ", 1);
                    } else {
                        JOptionPane.showMessageDialog(this, "Ocurrió un error");
                    }
                }
                break;
        }
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void cboOrdenar2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboOrdenar2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cboOrdenar2MouseClicked

    private void cboOrdenar2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboOrdenar2ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cboOrdenar2ItemStateChanged

    private void cboOrdenar2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboOrdenar2MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_cboOrdenar2MouseReleased

    private void cboOrdenar2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboOrdenar2MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_cboOrdenar2MouseExited

    private void cboOrdenar2PopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cboOrdenar2PopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        setOpcionSelec(cboOrdenar2.getSelectedIndex());
        llenarTabla();
    }//GEN-LAST:event_cboOrdenar2PopupMenuWillBecomeInvisible

    private void btnAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAyudaActionPerformed
        setCursor(Cursor.WAIT_CURSOR);
        File htmlAyuda = new File("info/index.html");
        String direccion = htmlAyuda.getAbsolutePath();
        try {
            Desktop dk = Desktop.getDesktop();
            URI url = new URI(direccion.replace("\\", "/"));
            dk.browse(url.resolve(url));
        } catch (URISyntaxException | IOException ex) {
            System.out.println("Error en btnAyudaActionPerformed:\n" + ex.getMessage());
            JOptionPane.showMessageDialog(this, "No se puede abrir la ayuda");
        }
        setCursor(Cursor.DEFAULT_CURSOR);
    }//GEN-LAST:event_btnAyudaActionPerformed

    private void btnComandosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComandosActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(this, "El uso incorrecto de esta herramienta podría resultar en un daño irremediable a la base de datos\ncontinue solo si sabe lo que esta haciendo\n¿Desea continuar?") == 0) {
            lineaComandos.setLocationRelativeTo(null);
            lineaComandos.setVisible(true);
        }
    }//GEN-LAST:event_btnComandosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MdiHuellitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MdiHuellitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MdiHuellitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MdiHuellitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MdiHuellitas().setVisible(true);
            }
        });
    }

    private void mostrarEn() {
        switch (cboMostrar.getSelectedIndex()) {
            case 0: //Albergue temporal
                lblTitulo.setText("Animales en albergue temporal");
                btnAdopcion.setVisible(true);
                btnRegresar.setVisible(false);
                btnAgregar.setVisible(true);
                break;
            case 1: //Albergue permanente
                lblTitulo.setText("Animales en albergue permanente");
                btnAdopcion.setVisible(true);
                btnRegresar.setVisible(false);
                btnAgregar.setVisible(true);
                break;
            case 2: //Perdidos
                lblTitulo.setText("Animales extraviados");
                btnAdopcion.setVisible(false);
                btnRegresar.setVisible(true);
                btnAgregar.setVisible(true);
                break;
            case 3: //Encontrados
                lblTitulo.setText("Animales encontrados");
                btnAdopcion.setVisible(false);
                btnRegresar.setVisible(true);
                btnAgregar.setVisible(true);
                break;
            case 4: //Adoptados
                lblTitulo.setText("Animales adoptados");
                btnAdopcion.setVisible(false);
                btnRegresar.setVisible(false);
                btnAgregar.setVisible(false);
                break;
        }
    }

    private void mostrarPor() {
        cboOrdenar2.removeAllItems();
        switch (cboOrdenar.getSelectedIndex()) {
            case 0: //Fecha                               
                cboOrdenar2.addItem("Más antiguo");
                cboOrdenar2.addItem("Más reciente");
                break;
            case 1: //Edad                             
                cboOrdenar2.addItem("Ascendente");
                cboOrdenar2.addItem("Descendente");
                break;
            case 2: //Tamaño               
                cboOrdenar2.addItem("Miniatura");
                cboOrdenar2.addItem("Pequeño");
                cboOrdenar2.addItem("Mediano");
                cboOrdenar2.addItem("Grande");
                cboOrdenar2.addItem("Gigante");
                break;
            case 3: //Especie              
                cboOrdenar2.addItem("Perro");
                cboOrdenar2.addItem("Gato");
                cboOrdenar2.addItem("Cuyo");
                cboOrdenar2.addItem("Otro");
                break;
            case 4: //Sexo              
                cboOrdenar2.addItem("Hembra");
                cboOrdenar2.addItem("Macho");
                break;
        }
    }

    private void llenarTabla() {
        mostrarEn();
        mostrarPor();
        indice.clear();

        DefaultTableModel modelo = new DefaultTableModel() {
            @Override
            public Class getColumnClass(int col) {
                switch (col) {
                    case 0:
                        return ImageIcon.class;
                    case 1:
                        return Object.class;
                    default:
                        return Object.class;
                }
            }
            @Override
            public boolean isCellEditable(int row, int column) {
               //all cells false
               return false;
            }
        };
        tblAnimales.setModel(modelo);

        String criterios[] = new String[3];
        criterios[0] = cboMostrar.getSelectedItem().toString();
        criterios[1] = cboOrdenar.getSelectedItem().toString();
        criterios[2] = cboOrdenar2.getItemAt(getOpcionSelec());
//        criterios[2] = cboOrdenar2.getSelectedItem().toString();
        if (cboOrdenar.getSelectedIndex() < 2) {
        
            if (getOpcionSelec() == 0) {
//            if (cboOrdenar2.getSelectedIndex() == 0) {
                criterios[2] = "ASC";
            } else {
                criterios[2] = "DESC";
            }
        } else if (cboOrdenar.getSelectedIndex() == 2) {
        } else if (getOpcionSelec() == 2) {
            criterios[1] = "size";

        }

        int j = 0;
        try {
            //Llenar las cabeceras de la tabla
            modelo.addColumn("Foto");
            modelo.addColumn("Nombre");
            modelo.addColumn("Sexo");
            modelo.addColumn("Raza");
            modelo.addColumn("Edad");

            if (txtBuscar.getText().equals("")) {
                if (cboOrdenar.getSelectedIndex() < 2) {
                    rs = animal.consultarEn(criterios[0], criterios[1], criterios[2]);
                } else {
                    rs = animal.consultarPor(criterios[0], criterios[1], criterios[2]);
                }
            } else {
                rs = animal.consultarNombre(criterios[0], txtBuscar.getText());
            }

            while (rs.next()) {
                Blob blob = rs.getBlob("foto");
                ImageIcon icon;
                if (blob == null) {
                    Image img = new ImageIcon("src/iconos/gallery.png").getImage();
                    icon = new ImageIcon(img.getScaledInstance(150, 200, Image.SCALE_SMOOTH));
                } else {
                    byte[] data = blob.getBytes(1, (int) blob.length());
                    blob.free();

                    BufferedImage img = ImageIO.read(new ByteArrayInputStream(data));
                    icon = new ImageIcon(img.getScaledInstance(150, 200, Image.SCALE_SMOOTH));
                }

                Object[] ob = new Object[5];
                ob[0] = icon;
                ob[1] = rs.getString("nombre");
                ob[2] = rs.getString("sexo");
                ob[3] = rs.getString("raza");
                ob[4] = rs.getString("edad") + " meses";
                indice.addElement(rs.getInt("idAnimal"));

                modelo.addRow(ob);
                ob = null;
                tblAnimales.setRowHeight(j, 200);

                j++;
            }

            switch (j) {
                case 0:
                    lblResultado.setText("No se encontraron resultados");
                    break;
                case 1:
                    lblResultado.setText("Se encontró 1 resultado");
                    break;
                default:
                    lblResultado.setText("Se encontraron " + j + " resultados");
            }

        } catch (SQLException | IOException ex) {
            System.out.println("Error en MdiHuellitas.llenarTabla()\n" + ex.getMessage());
        }
    }

    private void campana(boolean x) {
        if (x) {
            Image imgNotificacion = new ImageIcon("src/iconos/nuevaNotificacion.png").getImage();
            ImageIcon iconoNotificacion = new ImageIcon(imgNotificacion.getScaledInstance(32, 32, Image.SCALE_SMOOTH));
            btnNotificaciones.setIcon(iconoNotificacion);
            btnNotificaciones.setSize(32, 32);
            btnNotificaciones.setToolTipText("Hay notificaciones nuevas");
        } else {
            Image imgNotificacion = new ImageIcon("src/iconos/notificacion.png").getImage();
            ImageIcon iconoNotificacion = new ImageIcon(imgNotificacion.getScaledInstance(32, 32, Image.SCALE_SMOOTH));
            btnNotificaciones.setIcon(iconoNotificacion);
            btnNotificaciones.setSize(32, 32);
            btnNotificaciones.setToolTipText("No hay notificaciones");
        }
    }

    private void myInitComponents() {
        setExtendedState(MAXIMIZED_BOTH);
        
        Image imgConfiguracion = new ImageIcon("src/iconos/settings.png").getImage();
        ImageIcon iconoConfiguracion = new ImageIcon(imgConfiguracion.getScaledInstance(32, 32, Image.SCALE_SMOOTH));
        btnConfiguracion.setIcon(iconoConfiguracion);
        btnConfiguracion.setSize(32, 32);

        Image imgUsuarios = new ImageIcon("src/iconos/usuarios.png").getImage();
        ImageIcon iconoUsuarios = new ImageIcon(imgUsuarios.getScaledInstance(32, 32, Image.SCALE_SMOOTH));
        btnUsuarios.setIcon(iconoUsuarios);
        btnUsuarios.setSize(32, 32);

        Image imgcambiarUsuarios = new ImageIcon("src/iconos/cambiarUsuarios.png").getImage();
        ImageIcon iconocambiarUsuarios = new ImageIcon(imgcambiarUsuarios.getScaledInstance(32, 32, Image.SCALE_SMOOTH));
        btnCambiar.setIcon(iconocambiarUsuarios);
        btnCambiar.setSize(32, 32);
        
        Image imgAyuda = new ImageIcon("src/iconos/help.png").getImage();
        ImageIcon iconoAyuda = new ImageIcon(imgAyuda.getScaledInstance(32, 32, Image.SCALE_SMOOTH));
        btnAyuda.setIcon(iconoAyuda);
        btnAyuda.setSize(32, 32);
        
        Image imgComando = new ImageIcon("src/iconos/code.png").getImage();
        ImageIcon iconoComando = new ImageIcon(imgComando.getScaledInstance(32, 32, Image.SCALE_SMOOTH));
        btnComandos.setIcon(iconoComando);
        btnComandos.setSize(32, 32);

        Image imgIconoApp = new ImageIcon("src/iconos/Huellita.png").getImage();
        setIconImage(imgIconoApp);
        campana(notificacion.hayNotificaciones());

        habilitarCajas(false);
        
        try {
            rs = asociacion.consultar();
            if (rs.next()) {
                setTitle("Huellitas - " + rs.getString("nombre"));
            } else {
                setTitle("Huellitas");
            }
        } catch (SQLException ex) {
            System.out.println("Error en MdiHuellitas.myInitComponents():\n" + ex.getMessage());
            setTitle("Huellitas");
        }
    }

    private void habilitarCajas(boolean bo) {
        btnEliminar.setEnabled(bo);
        btnVer.setEnabled(bo);
        btnModificar.setEnabled(bo);
        btnRegresar.setEnabled(bo);
        btnAdopcion.setEnabled(bo);
    }
    
    public void iniciarSesion(String user, boolean root) {
        System.out.println(sesion.crear());
        sesion.setUsuario(user);
        sesion.setRoot(root);
        System.out.println(sesion.agregar());
        
        rs = sesion.consultar();
        try {
            if (rs.next()) {
                setSesionIniciada(rs.getString("usuario"));
                setIsRoot(rs.getBoolean("root"));
            }
        } catch (SQLException ex) {
            System.out.println("Error en MdiHuellitas.myInitComponents");
        }
        
        lblUsuario.setText("Sesión iniciada como " + getSesionIniciada());
        if (isIsRoot()) {
            btnUsuarios.setVisible(true);
            btnComandos.setVisible(true);
        } else {
            btnUsuarios.setVisible(false);
            btnComandos.setVisible(true);
        }
    }

    private void ponerMitad(Component jif) {
        desktopPane.add(jif);
        if (desktopPane.getHeight() < jif.getHeight()) {
            jif.setLocation((desktopPane.getWidth() - jif.getWidth()) / 2, 20);
        } else {
            jif.setLocation((desktopPane.getWidth() - jif.getWidth()) / 2, (desktopPane.getHeight() - jif.getHeight()) / 2);
        }
        jif.setVisible(true);
    }
    
    /**
     * Agrega una notificacion, 
     * Si accion = 0 se elimino
     * Si accion = 1 se regresó con su dueño
     * Si accion = 2 se adopto
     * Si accion = 3 se modificó
     * @param nombre
     * @param localizacion 
     * @param accion
     */
    private void agregarNotificacion(String nombre, String localizacion, int accion) {
        String mensaje = "";
        switch (accion) {
            case 0: mensaje = " eliminó a ";
                break;
            case 1: mensaje = " regreso con su dueño a ";
                break;
            case 2: mensaje = " dió en adopcion a ";
                break;
            case 3: mensaje = " modificó la información de ";
                break;
        }
        
        notificacion.setIdNotificacion(0);
        notificacion.setFecha(validar.fechaActual(false));
        notificacion.setMensaje(getSesionIniciada() + mensaje + nombre + " de los animales en " + localizacion);
        notificacion.setRepetir(false);
        notificacion.agregar();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdopcion;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAyuda;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCambiar;
    private javax.swing.JButton btnComandos;
    private javax.swing.JButton btnConfiguracion;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNotificaciones;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnUsuarios;
    private javax.swing.JButton btnVer;
    private javax.swing.JComboBox<String> cboMostrar;
    private javax.swing.JComboBox<String> cboOrdenar;
    private javax.swing.JComboBox<String> cboOrdenar2;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblResultado;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JTable tblAnimales;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables

}