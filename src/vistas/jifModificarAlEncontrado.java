/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import huellitas.AlbergueTemporal;
import huellitas.Animal;
import huellitas.AnimalEncontrado;
import huellitas.Notificaciones;
import huellitas.Validaciones;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.sql.Blob;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Alumno
 */
public class jifModificarAlEncontrado extends javax.swing.JInternalFrame {
    private Validaciones validar = new Validaciones(); 
    private Animal animal = new Animal();
    private AnimalEncontrado encontrado = new AnimalEncontrado();
    private AlbergueTemporal temporal = new AlbergueTemporal();
    private Notificaciones notificacion = new Notificaciones();

    private jifConsultarAlExtraviado consultarPerdido;
    private jifVerImagen verFoto;
    
    private JFileChooser selector = new JFileChooser();
    private FileNameExtensionFilter filtro = new FileNameExtensionFilter("Imágenes", "jpg","jpeg","png");
    private String ruta;
    
    private ResultSet rs;
    private int id;
    private Image foto;
    private String tipo;
    public boolean cambioFoto;

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }
    
    public Image getFoto() {
        return foto;
    }

    public void setFoto(Image foto) {
        this.foto = foto;
    }

    public boolean isCambioFoto() {
        return cambioFoto;
    }

    public void setCambioFoto(boolean cambioFoto) {
        this.cambioFoto = cambioFoto;
    }
    /**
     * Creates new form jifNuevo
     */
    public jifModificarAlEncontrado(int id) {
        this.id = id;
        initComponents();
        myInitComponents();
        llenarCajas();
        setCambioFoto(false);        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        txtEdad = new javax.swing.JTextField();
        lblFoto = new javax.swing.JLabel();
        cboSexo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jcbEsterilizado = new javax.swing.JCheckBox();
        lblEspecie = new javax.swing.JLabel();
        cboSize = new javax.swing.JComboBox<>();
        lblRaza = new javax.swing.JLabel();
        lblSize = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        lblSexo = new javax.swing.JLabel();
        lblColonia = new javax.swing.JLabel();
        lblEdad = new javax.swing.JLabel();
        txtColonia = new javax.swing.JTextField();
        btnSeleccionarFoto = new javax.swing.JButton();
        lblDireccion = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        lblMunicipio = new javax.swing.JLabel();
        txtMunicipio = new javax.swing.JTextField();
        txtRaza = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        lblNuevo = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        cboEspecie = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lblCaracteristicas = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtCaracteristicas = new javax.swing.JTextArea();
        btnAceptar = new javax.swing.JButton();
        btnEnviarPermanente = new javax.swing.JButton();
        btnEnviarTemporal = new javax.swing.JButton();
        lblColonia1 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        lblMunicipio1 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Animal localizado - Modificar");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Huellita.png"))); // NOI18N

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        lblFoto.setToolTipText("Ver foto del animal");
        lblFoto.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblFoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblFotoMouseClicked(evt);
            }
        });

        cboSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hembra", "Macho" }));

        jLabel3.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nombre:");

        jcbEsterilizado.setBackground(new java.awt.Color(0, 0, 0));
        jcbEsterilizado.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        jcbEsterilizado.setForeground(new java.awt.Color(255, 255, 255));
        jcbEsterilizado.setText("Esterilizado");

        lblEspecie.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        lblEspecie.setForeground(new java.awt.Color(255, 255, 255));
        lblEspecie.setText("Especie:");

        cboSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Miniatura", "Pequeño", "Mediano", "Grande", "Gigante" }));
        cboSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSizeActionPerformed(evt);
            }
        });

        lblRaza.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        lblRaza.setForeground(new java.awt.Color(255, 255, 255));
        lblRaza.setText("Raza:");

        lblSize.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        lblSize.setForeground(new java.awt.Color(255, 255, 255));
        lblSize.setText("Tamaño:");

        lblFecha.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        lblFecha.setForeground(new java.awt.Color(255, 255, 255));
        lblFecha.setText("Fecha: ");

        lblSexo.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        lblSexo.setForeground(new java.awt.Color(255, 255, 255));
        lblSexo.setText("Sexo:");

        lblColonia.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        lblColonia.setForeground(new java.awt.Color(255, 255, 255));
        lblColonia.setText("Colonia: ");

        lblEdad.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        lblEdad.setForeground(new java.awt.Color(255, 255, 255));
        lblEdad.setText("Edad (meses):");

        btnSeleccionarFoto.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        btnSeleccionarFoto.setText("Seleccionar Foto");
        btnSeleccionarFoto.setToolTipText("Subir una nueva foto");
        btnSeleccionarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarFotoActionPerformed(evt);
            }
        });

        lblDireccion.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        lblDireccion.setForeground(new java.awt.Color(255, 255, 255));
        lblDireccion.setText("Direccion:");

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreKeyReleased(evt);
            }
        });

        lblMunicipio.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        lblMunicipio.setForeground(new java.awt.Color(255, 255, 255));
        lblMunicipio.setText("Municipio: ");

        jPanel2.setBackground(new java.awt.Color(0, 204, 255));

        lblNuevo.setFont(new java.awt.Font("Amatic SC", 1, 36)); // NOI18N
        lblNuevo.setForeground(new java.awt.Color(255, 255, 255));
        lblNuevo.setText("Animal localizado");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Amatic SC", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Datos del animal");
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );

        cboEspecie.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Perro", "Gato", "Cuyo", "Otro" }));

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));

        jLabel2.setFont(new java.awt.Font("Amatic SC", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Datos del animal");
        jLabel2.setToolTipText("");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        lblCaracteristicas.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        lblCaracteristicas.setForeground(new java.awt.Color(255, 255, 255));
        lblCaracteristicas.setText("Características:");

        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        txtCaracteristicas.setColumns(20);
        txtCaracteristicas.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtCaracteristicas.setLineWrap(true);
        txtCaracteristicas.setRows(5);
        txtCaracteristicas.setWrapStyleWord(true);
        txtCaracteristicas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCaracteristicasKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txtCaracteristicas);

        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnEnviarPermanente.setText("Enviar a albergue permanente");
        btnEnviarPermanente.setToolTipText("Guardar los cambios y enviar a albergue permanente");
        btnEnviarPermanente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarPermanenteActionPerformed(evt);
            }
        });

        btnEnviarTemporal.setText("Enviar a albergue temporal");
        btnEnviarTemporal.setToolTipText("Guardar los cambios y enviar a albergue temporal");
        btnEnviarTemporal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarTemporalActionPerformed(evt);
            }
        });

        lblColonia1.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        lblColonia1.setForeground(new java.awt.Color(255, 255, 255));
        lblColonia1.setText("Teléfono:");

        lblMunicipio1.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        lblMunicipio1.setForeground(new java.awt.Color(255, 255, 255));
        lblMunicipio1.setText("Correo:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFecha, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblColonia, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDireccion, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblMunicipio, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblColonia1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblMunicipio1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMunicipio)
                            .addComponent(txtDireccion)
                            .addComponent(txtFecha, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtColonia)
                            .addComponent(txtTelefono)
                            .addComponent(txtCorreo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnEnviarPermanente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEnviarTemporal, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnCancelar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAceptar))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnSeleccionarFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCaracteristicas)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblEdad)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(25, 25, 25)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblRaza, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lblSize, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lblSexo, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lblEspecie, javax.swing.GroupLayout.Alignment.TRAILING))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtNombre)
                                            .addComponent(cboEspecie, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtRaza)
                                            .addComponent(cboSize, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cboSexo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(txtEdad)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jcbEsterilizado, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))))))))
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSeleccionarFoto))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEspecie)
                            .addComponent(cboEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRaza)
                            .addComponent(txtRaza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSize)
                            .addComponent(cboSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSexo)
                            .addComponent(cboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEdad)
                            .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbEsterilizado))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCaracteristicas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFecha))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDireccion))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(lblColonia)
                            .addComponent(txtColonia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMunicipio)
                            .addComponent(txtMunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblColonia1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMunicipio1))
                        .addGap(0, 62, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnEnviarPermanente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEnviarTemporal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAceptar)
                            .addComponent(btnCancelar))
                        .addGap(66, 66, 66))))
        );

        jScrollPane3.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboSizeActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        // TODO add your handling code here:
        if (validarCajas().equals("true")) {
            int registro = encontrado.registroExiste(txtNombre.getText());
            if (registro == 0) {
                modificaciones(0);
            } else {
                int opcion = JOptionPane.showConfirmDialog(this, "Se encontró un registro en los animales extraviados con el nombre de " + txtNombre.getText() + " ¿Desea revisar?");
                switch (opcion) {
                    case 0:
                        consultarPerdido = new jifConsultarAlExtraviado(registro);
                        JDesktopPane desktopPane = this.getDesktopPane();
                        desktopPane.add(consultarPerdido);
                        consultarPerdido.setVisible(true);
                        break;
                    case 1:
                        modificaciones(0);
                        break;
                    default:
                        notificacion.setFecha(validar.fechaActual(false));
                        notificacion.setIdNotificacion(0);
                        notificacion.setRepetir(false);
                        notificacion.setMensaje(txtNombre.getText() + "podría ser un registro repetido en los animales encontrados y los extraviados");
                        break;
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, validarCajas());
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnSeleccionarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarFotoActionPerformed
        // TODO add your handling code here:
        File archivo;
        Image img;
        ImageIcon imgR;
        this.selector.setFileFilter(this.filtro);
        int respuesta = this.selector.showOpenDialog(this);
        archivo = this.selector.getSelectedFile();
        if (archivo == null || archivo.getName().trim().equals("") || archivo.length() > 1048576) {
                JOptionPane.showMessageDialog(this, "Selecciona un archivo","Archivo incorrecto, el archivo es demaciado pesado, máximo 1024 KB", JOptionPane.ERROR_MESSAGE);
        } else {
            this.ruta = archivo.getAbsolutePath();
            try {
                this.tipo = Files.probeContentType(archivo.toPath());
            } catch (IOException ex) {
                System.out.println("Error en jifModificarAlEncontrado.btnCredencial:\n" + ex.getMessage());
            }
            img = new ImageIcon(archivo.getAbsolutePath()).getImage();
            setFoto(img);
            imgR = new ImageIcon(img.getScaledInstance(150, 200, Image.SCALE_SMOOTH));
            lblFoto.setIcon(imgR);
            setCambioFoto(true);
        }
    }//GEN-LAST:event_btnSeleccionarFotoActionPerformed

    private void txtCaracteristicasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCaracteristicasKeyReleased
        // TODO add your handling code here:
        if ((txtCaracteristicas.getText().length()) < 257) {
            lblCaracteristicas.setText("Caracteristicas: " + (256 - (txtCaracteristicas.getText().length())) + " caracteres restantes");
        } else {
            lblCaracteristicas.setText("Características: Solo se permiten máximo 256 carácteres");
        }
    }//GEN-LAST:event_txtCaracteristicasKeyReleased

    private void btnEnviarPermanenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarPermanenteActionPerformed
        // TODO add your handling code here:
        if (validarCajas().equals("true")) {
            if (JOptionPane.showConfirmDialog(this, "¿Seguro que quieres enviar a " + txtNombre.getText() + " al albergue permanente?") == 0) {
                int registro = encontrado.registroExiste(txtNombre.getText());
            if (registro == 0) {
                modificaciones(1);
            } else {
                int opcion = JOptionPane.showConfirmDialog(this, "Se encontró un registro en los animales extraviados con el nombre de " + txtNombre.getText() + " ¿Desea revisar?");
                if (opcion == 0) {
                    consultarPerdido = new jifConsultarAlExtraviado(registro);
                    JDesktopPane desktopPane = this.getDesktopPane();
                    desktopPane.add(consultarPerdido);
                    consultarPerdido.setVisible(true);
                } else if (opcion == 1) {
                    modificaciones(1);
                }
            }
            }
        } else {
            JOptionPane.showMessageDialog(this, validarCajas());
        }
    }//GEN-LAST:event_btnEnviarPermanenteActionPerformed

    private void btnEnviarTemporalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarTemporalActionPerformed
        // TODO add your handling code here:
        if (validarCajas().equals("true")) {
            if (JOptionPane.showConfirmDialog(this, "¿Seguro que quieres enviar a " + txtNombre.getText() + " al albergue temporal?") == 0) {
                int registro = encontrado.registroExiste(txtNombre.getText());
                if (registro == 0) {
                    modificaciones(2);
                } else {
                    int opcion = JOptionPane.showConfirmDialog(this, "Se encontró un registro en los animales extraviados con el nombre de " + txtNombre.getText() + " ¿Desea revisar?");
                    if (opcion == 0) {
                        consultarPerdido = new jifConsultarAlExtraviado(registro);
                        JDesktopPane desktopPane = this.getDesktopPane();
                        desktopPane.add(consultarPerdido);
                        consultarPerdido.setVisible(true);
                    } else if (opcion == 1) {
                        modificaciones(2);
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, validarCajas());
        }
    }//GEN-LAST:event_btnEnviarTemporalActionPerformed

    private void txtNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyReleased
        // TODO add your handling code here:
        setTitle("Animal localizado - " + txtNombre.getText());
    }//GEN-LAST:event_txtNombreKeyReleased

    private void lblFotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFotoMouseClicked
        // TODO add your handling code here:
        verFoto = new jifVerImagen(getFoto(), txtNombre.getText());
        JDesktopPane desktopPane = this.getDesktopPane();
        desktopPane.add(verFoto);
        verFoto.setVisible(true);
    }//GEN-LAST:event_lblFotoMouseClicked

    private void llenarCajas() {
        try {
            rs = animal.consultarId(getId());
            if (rs.next()) {
                txtNombre.setText(rs.getString("nombre"));
                switch (rs.getString("especie")) {
                    case "Perro":
                        cboEspecie.setSelectedIndex(0);
                        break;
                    case "Gato":
                        cboEspecie.setSelectedIndex(1);
                        break;
                    case "Cuyo":
                        cboEspecie.setSelectedIndex(2);
                        break;
                    case "Otro":
                        cboEspecie.setSelectedIndex(3);
                        break;
                }                
                txtRaza.setText(rs.getString("raza"));
                switch (rs.getString("size")) {
                    case "Miniatura":
                        cboSize.setSelectedIndex(0);
                        break;
                    case "Pequeño":
                        cboSize.setSelectedIndex(1);
                        break;
                    case "Mediano":
                        cboSize.setSelectedIndex(2);
                        break;
                    case "Grande":
                        cboSize.setSelectedIndex(3);
                        break;
                    case "Gigante":
                        cboSize.setSelectedIndex(4);
                        break;
                } 
                switch (rs.getString("sexo")) {
                    case "Hembra":
                        cboSexo.setSelectedIndex(0);
                        break;
                    case "Macho":
                        cboSexo.setSelectedIndex(1);
                        break;
                } 
                txtEdad.setText(rs.getString("edad"));
                jcbEsterilizado.setSelected(rs.getBoolean("esterilizado"));
                txtCaracteristicas.setText(rs.getString("caracteristicas"));
                txtFecha.setText(validar.cambiarFecha(rs.getString("fecha")));
                Blob blob = rs.getBlob("foto");
                ImageIcon icon;
                if (blob == null) {
                    Image img = new ImageIcon("src/iconos/gallery.png").getImage();
                    setFoto(img);
                    icon = new ImageIcon(img.getScaledInstance(150, 200, Image.SCALE_SMOOTH));
                } else {
                    byte[] data = blob.getBytes(1, (int) blob.length());
                    blob.free();

                    BufferedImage img = ImageIO.read(new ByteArrayInputStream(data));
                    setFoto(img);
                    icon = new ImageIcon(img.getScaledInstance(150, 200, Image.SCALE_SMOOTH));
                }
                lblFoto.setIcon(icon);
                setTitle("Animal extraviado - " + txtNombre.getText());
            }
            
            rs = encontrado.consultarId(getId());
            if (rs.next()) {
                txtDireccion.setText(rs.getString("direccion"));
                txtColonia.setText(rs.getString("colonia"));
                txtMunicipio.setText(rs.getString("municipio"));
                txtCorreo.setText(rs.getString("correo"));
                txtTelefono.setText(rs.getString("telefono"));
            }
        } catch (SQLException | IOException ex) {
            System.out.println("Error en jifModificarAlEncontrado.llenarCajas:\n" + ex.getMessage());
        }
    }
    
    /**
     * Opcion = 0 para solo guardar cambios
     * Opcion = 1 para enviar a albergue permanente
     * Opcion = 2 para enviar a albergue temporal
     * @param opcion 
     */
    private void modificaciones(int opcion) {
        animal.setNombre(txtNombre.getText());
        animal.setFoto(this.ruta);
        animal.setTipoFoto(this.tipo);
        animal.setEspecie(cboEspecie.getSelectedItem().toString());
        animal.setRaza(txtRaza.getText());
        animal.setSize(cboSize.getSelectedItem().toString());
        animal.setSexo(cboSexo.getSelectedItem().toString());
        animal.setEdad(Integer.parseInt(txtEdad.getText()));
        animal.setEsterilizado(jcbEsterilizado.isSelected());        
        animal.setCaracteristicas(txtCaracteristicas.getText()); 
        switch (opcion) {
            case 0: animal.setLocalizacion("Encontrados");
                animal.setFecha(validar.getFecha());
                encontrado.setColonia(txtColonia.getText());
                encontrado.setDireccion(txtDireccion.getText());
                encontrado.setMunicipio(txtMunicipio.getText());
                encontrado.setTelefono(txtTelefono.getText());
                encontrado.setCorreo(txtCorreo.getText());
                
                if (encontrado.modificar(getId()).startsWith("Se modifico") && animal.modificar(getId(),isCambioFoto()).startsWith("Se modifico")) {
                    JOptionPane.showMessageDialog(this, "Se han guardado los cambios");
                } else {
                    JOptionPane.showMessageDialog(this, "Ocurrió un error al guardar los cambios");
                }            
                dispose();
                break;
            case 1: animal.setLocalizacion("Albergue permanente");
                animal.setFecha(validar.fechaActual(false));
                
                if (encontrado.eliminar(getId()).startsWith("Se elimino") && animal.modificar(getId(),isCambioFoto()).startsWith("Se modifico")) {
                    JOptionPane.showMessageDialog(this, "Se han guardado los cambios");
                } else {
                    JOptionPane.showMessageDialog(this, "Ocurrió un error al guardar los cambios");
                }            
                dispose();
                break;
            case 2: animal.setLocalizacion("Albergue temporal");
                animal.setFecha(validar.fechaActual(false));
                temporal.setAnimal_idAnimal(getId());
                String diagnostico;
                do {                
                    diagnostico = JOptionPane.showInputDialog("Diagnostico (Máximo 256 carácteres)");
                } while (!(diagnostico.length() > 0 && diagnostico.length() <= 256));
                temporal.setDiagnostico(diagnostico);
                temporal.setAvance("");
                
                if (encontrado.eliminar(getId()).startsWith("Se elimino") && animal.modificar(getId(),isCambioFoto()).startsWith("Se modifico") && temporal.agregar().startsWith("Se agrego")) {
                    JOptionPane.showMessageDialog(this, "Se han guardado los cambios");
                } else {
                    JOptionPane.showMessageDialog(this, "Ocurrió un error al guardar los cambios");
                }            
                dispose();
                break;
        }
    }
        
    private void myInitComponents() {
        Image imgCancelar = new ImageIcon("src/iconos/cruss.png").getImage();
        ImageIcon iconoCancelar = new ImageIcon(imgCancelar.getScaledInstance(32, 32, Image.SCALE_SMOOTH));
        btnCancelar.setIcon(iconoCancelar);    
        btnCancelar.setSize(32, 32);
        
        Image imgAceptar = new ImageIcon("src/iconos/check.png").getImage();
        ImageIcon iconoAceptar = new ImageIcon(imgAceptar.getScaledInstance(32, 32, Image.SCALE_SMOOTH));
        btnAceptar.setIcon(iconoAceptar);
    }
    
    private String validarCajas() {
        String resultado = "true";
        if (!(validar.size("El campo características", txtCaracteristicas.getText(), 0, 256)).equals("true")) {
            resultado = validar.size("El campo características", txtCaracteristicas.getText(), 0, 255);
            txtCaracteristicas.requestFocus();
        }
        if (!validar.noVacio(txtEdad.getText())) {
            resultado = "Faltan datos";
            txtEdad.requestFocus();
        } else if (!validar.isNumber(txtEdad.getText())){
            resultado = "La edad debe ser un número";
            txtEdad.requestFocus();
        } 
        if (!validar.noVacio(txtRaza.getText())) {
            resultado = "Faltan datos";
            txtRaza.requestFocus();
        } else if (txtRaza.getText().length() > 50) {
            resultado = "La raza es demaciado larga (máximo 50 carácteres";
        }
        if (!validar.noVacio(txtNombre.getText())) {
            resultado = "Faltan datos";
            txtNombre.requestFocus();
        } else if (txtNombre.getText().length() > 50) {
            resultado = "El nombre es demaciado largo (máximo 50 carácteres";
        }
        if (!validar.isEmail(txtCorreo.getText())) {
            resultado = "Ingresa un correo electrónico";
            txtCorreo.requestFocus();
        }
        if (!(txtTelefono.getText().length() == 10 || txtTelefono.getText().length() == 7)) {
            resultado = "Debe ingresar un telefono fijo o celular, no ingreses carácteres entre los números";
            txtTelefono.requestFocus();
        }
        if (!validar.noVacio(txtMunicipio.getText())) {
            resultado = "Faltan datos";
            txtMunicipio.requestFocus();
        } else if (txtMunicipio.getText().length() > 100) {
            resultado = "El municipio es demaciado largo (máximo 100 carácteres";
        }
        if (!validar.noVacio(txtColonia.getText())) {
            resultado = "Faltan datos";
            txtColonia.requestFocus();
        } else if (txtColonia.getText().length() > 100) {
            resultado = "La colonia es demaciado larga (máximo 100 carácteres";
        }
        if (!validar.noVacio(txtDireccion.getText())) {
            resultado = "Faltan datos";
            txtDireccion.requestFocus();
        } else if (txtDireccion.getText().length() > 100) {
            resultado = "La dirección es demaciado larga (máximo 100 carácteres";
        }
        if (!validar.esFecha(txtFecha.getText()).equals("true")){
            resultado = validar.esFecha(txtFecha.getText());
            txtFecha.requestFocus();
        }  
        if (isCambioFoto()) {
            if (this.ruta == null) {
                resultado = "Elige una foto";
                btnSeleccionarFoto.requestFocus();
            }
        }        
        return resultado;
    }     
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEnviarPermanente;
    private javax.swing.JButton btnEnviarTemporal;
    private javax.swing.JButton btnSeleccionarFoto;
    private javax.swing.JComboBox<String> cboEspecie;
    private javax.swing.JComboBox<String> cboSexo;
    private javax.swing.JComboBox<String> cboSize;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JCheckBox jcbEsterilizado;
    private javax.swing.JLabel lblCaracteristicas;
    private javax.swing.JLabel lblColonia;
    private javax.swing.JLabel lblColonia1;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblEdad;
    private javax.swing.JLabel lblEspecie;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JLabel lblMunicipio;
    private javax.swing.JLabel lblMunicipio1;
    private javax.swing.JLabel lblNuevo;
    private javax.swing.JLabel lblRaza;
    private javax.swing.JLabel lblSexo;
    private javax.swing.JLabel lblSize;
    private javax.swing.JTextArea txtCaracteristicas;
    private javax.swing.JTextField txtColonia;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtMunicipio;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtRaza;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
