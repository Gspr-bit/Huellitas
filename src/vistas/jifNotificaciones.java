/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import huellitas.Notificaciones;
import huellitas.Validaciones;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alumno
 */
public class jifNotificaciones extends javax.swing.JInternalFrame {
    private Validaciones validar = new Validaciones();
    private Notificaciones notificacion = new Notificaciones();
        
    private ResultSet rs;
    
    private int x = 1;    
    private int fs;
    private Vector <Integer> indice = new Vector <Integer> (1,1);

    public int getFs() {
        return fs;
    }

    public void setFs(int fs) {
        this.fs = fs;
    }
    
    
    /**
     * Creates new form jifNotificaciones
     */
    public jifNotificaciones() {
        initComponents();
        myInitComponents();
        llenarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        pnlAgregar = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        cbxRepetir = new javax.swing.JCheckBox();
        cboIntervalo = new javax.swing.JComboBox<>();
        lblIntervalo = new javax.swing.JLabel();
        txtIntervalo = new javax.swing.JTextField();
        lblMensaje = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMensaje = new javax.swing.JTextArea();
        btnCancelar = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnMarcarLeido = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNotificaciones = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        jButton3.setText("jButton3");

        setBackground(new java.awt.Color(0, 0, 0));
        setClosable(true);
        setTitle("Notificaciones");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/notificacion.png"))); // NOI18N

        pnlAgregar.setBackground(new java.awt.Color(0, 0, 0));
        pnlAgregar.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBackground(new java.awt.Color(204, 204, 0));

        jLabel2.setFont(new java.awt.Font("Amatic SC", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("AGREGAR NOTIFICACION");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(302, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Fecha:");

        txtFecha.setFont(new java.awt.Font("Roboto", 0, 10)); // NOI18N
        txtFecha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtFechaMouseClicked(evt);
            }
        });

        cbxRepetir.setBackground(new java.awt.Color(0, 0, 0));
        cbxRepetir.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        cbxRepetir.setForeground(new java.awt.Color(255, 255, 255));
        cbxRepetir.setText("Repetir");
        cbxRepetir.setToolTipText("Selecciona si quieres que esta notificaci贸n se envie periodicamente");
        cbxRepetir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxRepetirActionPerformed(evt);
            }
        });

        cboIntervalo.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        cboIntervalo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dias", "Semanas", "Meses" }));
        cboIntervalo.setToolTipText("Cada cuanto quieres que se repita la notificaci贸n");

        lblIntervalo.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        lblIntervalo.setForeground(new java.awt.Color(255, 255, 255));
        lblIntervalo.setText("Intervalo:");

        txtIntervalo.setFont(new java.awt.Font("Roboto", 0, 10)); // NOI18N
        txtIntervalo.setToolTipText("Cada cuanto quieres que se repita la notificaci贸n");

        lblMensaje.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        lblMensaje.setForeground(new java.awt.Color(255, 255, 255));
        lblMensaje.setText("Mensaje:");

        txtMensaje.setColumns(20);
        txtMensaje.setFont(new java.awt.Font("Roboto", 0, 10)); // NOI18N
        txtMensaje.setLineWrap(true);
        txtMensaje.setRows(5);
        txtMensaje.setToolTipText("Escribe el mensaje de la notificaci贸n");
        txtMensaje.setWrapStyleWord(true);
        txtMensaje.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMensajeKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(txtMensaje);

        btnCancelar.setMnemonic('c');
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnAceptar.setMnemonic('g');
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAgregarLayout = new javax.swing.GroupLayout(pnlAgregar);
        pnlAgregar.setLayout(pnlAgregarLayout);
        pnlAgregarLayout.setHorizontalGroup(
            pnlAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAgregarLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(lblMensaje))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAgregarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlAgregarLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxRepetir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblIntervalo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIntervalo, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboIntervalo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlAgregarLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlAgregarLayout.createSequentialGroup()
                                .addComponent(btnCancelar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAceptar))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        pnlAgregarLayout.setVerticalGroup(
            pnlAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAgregarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cbxRepetir)
                    .addComponent(cboIntervalo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIntervalo)
                    .addComponent(txtIntervalo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblMensaje)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnAceptar)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Amatic SC", 1, 36)); // NOI18N
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText("NOTIFICACIONES");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );

        btnMarcarLeido.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        btnMarcarLeido.setMnemonic('m');
        btnMarcarLeido.setText("Marcar como leido");
        btnMarcarLeido.setToolTipText("Marcar esta notificaci贸n como le铆da (Alt + m)");
        btnMarcarLeido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMarcarLeidoActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        btnEliminar.setMnemonic('e');
        btnEliminar.setText("Eliminar");
        btnEliminar.setToolTipText("No volver a mostrar esta notificaci贸n (Alt + e)");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnAgregar.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        btnAgregar.setMnemonic('a');
        btnAgregar.setText("Agregar");
        btnAgregar.setToolTipText("Agregar un nuevo recordatorio (Alt + a)");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jScrollPane3.setBackground(new java.awt.Color(0, 0, 0));

        tblNotificaciones.setBackground(new java.awt.Color(0, 0, 0));
        tblNotificaciones.setFont(new java.awt.Font("Roboto", 0, 10)); // NOI18N
        tblNotificaciones.setForeground(new java.awt.Color(255, 255, 255));
        tblNotificaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblNotificaciones.setGridColor(new java.awt.Color(0, 0, 0));
        tblNotificaciones.setSelectionBackground(new java.awt.Color(51, 51, 51));
        tblNotificaciones.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tblNotificaciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNotificacionesMouseClicked(evt);
            }
        });
        tblNotificaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblNotificacionesKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblNotificaciones);

        jScrollPane3.setViewportView(jScrollPane1);

        jButton1.setFont(new java.awt.Font("Patrick Hand SC", 0, 14)); // NOI18N
        jButton1.setMnemonic('t');
        jButton1.setText("Marcar todo como le铆do");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMarcarLeido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMarcarLeido)
                    .addComponent(btnEliminar)
                    .addComponent(btnAgregar)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(pnlAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        pnlAgregar.setVisible(true);        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        pnlAgregar.setVisible(false);
        vaciarCajas();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void cbxRepetirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxRepetirActionPerformed
        // TODO add your handling code here:
        lblIntervalo.setEnabled(cbxRepetir.isSelected());
        txtIntervalo.setEnabled(cbxRepetir.isSelected());
        cboIntervalo.setEnabled(cbxRepetir.isSelected());
    }//GEN-LAST:event_cbxRepetirActionPerformed

    private void txtFechaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFechaMouseClicked
        // TODO add your handling code here:       
    }//GEN-LAST:event_txtFechaMouseClicked

    private void txtMensajeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMensajeKeyReleased
        // TODO add your handling code here:
        if ((txtMensaje.getText().length()) < 257) {
            lblMensaje.setText("Mensaje: " + (256 - (txtMensaje.getText().length())) + " caracteres restantes");
        } else {
            lblMensaje.setText("Mensaje: Solo se permiten m谩ximo 256 car谩cteres");
        }
    }//GEN-LAST:event_txtMensajeKeyReleased

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        // TODO add your handling code here:
        if (validarCajas().equals("true")) {
            notificacion.setIdNotificacion(0);
            notificacion.setFecha(validar.getFecha());
            notificacion.setMensaje(txtMensaje.getText());
            if (cbxRepetir.isSelected()) {                
                notificacion.setIntervaloNum(Integer.parseInt(txtIntervalo.getText()));
                notificacion.setIntervalo(cboIntervalo.getSelectedItem().toString());                
                notificacion.setRepetir(true);
            } else {                
                notificacion.setRepetir(false);
            }
            
            if (notificacion.agregar().startsWith("Se agrego:")) {
                llenarTabla();
                JOptionPane.showMessageDialog(this, "Se han guardado los cambios");
            } else {
                JOptionPane.showMessageDialog(this, "Ocurri贸 un error al guardar los cambios");
            }   
            
            pnlAgregar.setVisible(false);
            
        } else {
            JOptionPane.showMessageDialog(this, validarCajas());
        }
        
        vaciarCajas();
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void tblNotificacionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNotificacionesMouseClicked
        // TODO add your handling code here:     
        setFs(tblNotificaciones.getSelectedRow());  
        if (fs != -1) {
            btnEliminar.setEnabled(true);
            btnMarcarLeido.setEnabled(true);
        }        
    }//GEN-LAST:event_tblNotificacionesMouseClicked

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:        
        if (JOptionPane.showConfirmDialog(this, "Si eliminas esta notificaci贸n no volveras a recibirla nunca mas.\n驴Quieres continuar?") == 0) {
            System.out.println(notificacion.eliminar((int) indice.elementAt(getFs())));
            btnEliminar.setEnabled(false);
            btnMarcarLeido.setEnabled(false);
            setFs(-1);
            llenarTabla();
        }  
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnMarcarLeidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMarcarLeidoActionPerformed
        try {
            // TODO add your handling code here:
            rs = notificacion.consultarId((int) indice.elementAt(getFs()));
            if (rs.next()) {
                if (rs.getBoolean("repetir")) {
                    switch(rs.getString("intervalo")) {
                        case "Dias":
                            System.out.println(notificacion.repetir((int) indice.elementAt(getFs()), rs.getString("fecha"), 0, 0, rs.getInt("intervaloNum")));
                            break;
                        case "Semanas":
                            System.out.println(notificacion.repetir((int) indice.elementAt(getFs()), rs.getString("fecha"), 0, 0, (rs.getInt("intervaloNum") * 7)));
                            break;
                        case "Meses":
                            System.out.println(notificacion.repetir((int) indice.elementAt(getFs()), rs.getString("fecha"), 0, rs.getInt("intervaloNum"), 0));
                            break;
                    }
                } else {
                    notificacion.eliminar((int) indice.elementAt(getFs()));
                }
            }
        } catch (SQLException ex) {
            System.out.println("Error en jifNotificaciones.btnMarcarLeidoActionPerformed()\n" + ex.getMessage());
        }
        llenarTabla();
        btnEliminar.setEnabled(false);
        btnMarcarLeido.setEnabled(false);
        setFs(-1);
    }//GEN-LAST:event_btnMarcarLeidoActionPerformed

    private void tblNotificacionesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblNotificacionesKeyPressed
        // TODO add your handling code here:
        if (fs != -1) {
            switch (evt.getKeyCode()) {
                case KeyEvent.VK_ENTER:
                    btnMarcarLeido.doClick();
                    break;
                case KeyEvent.VK_DELETE:
                    btnEliminar.doClick();
                    break;
                case KeyEvent.VK_INSERT:
                    btnAgregar.doClick();
                    break;
            }
        }   
    }//GEN-LAST:event_tblNotificacionesKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            for (int i = 0; i < indice.size(); i++) {
                rs = notificacion.consultarId((int) indice.elementAt(i));
                if (rs.next()) {
                    if (rs.getBoolean("repetir")) {
                        switch(rs.getString("intervalo")) {
                            case "Dias":
                                System.out.println(notificacion.repetir((int) indice.elementAt(i), rs.getString("fecha"), 0, 0, rs.getInt("intervaloNum")));
                                break;
                            case "Semanas":
                                System.out.println(notificacion.repetir((int) indice.elementAt(i), rs.getString("fecha"), 0, 0, (rs.getInt("intervaloNum") * 7)));
                                break;
                            case "Meses":
                                System.out.println(notificacion.repetir((int) indice.elementAt(i), rs.getString("fecha"), 0, rs.getInt("intervaloNum"), 0));
                                break;
                        }
                    } else {
                        notificacion.eliminar((int) indice.elementAt(i));
                    }
                }
            }
        } catch (SQLException ex) {
            System.out.println("Error en jifNotificaciones.btnMarcarLeidoActionPerformed()\n" + ex.getMessage());
        }
        llenarTabla();
        btnEliminar.setEnabled(false);
        btnMarcarLeido.setEnabled(false);
        setFs(-1);
    }//GEN-LAST:event_jButton1ActionPerformed

    public String validarCajas() {
        String resultado = "true";
        if (!(validar.size("El mensaje", txtMensaje.getText(), 0, 256)).equals("true")) {
            resultado = validar.size("El mensaje", txtMensaje.getText(), 0, 255);
            txtMensaje.requestFocus();
        }
        if (cbxRepetir.isSelected()) {
            if (!validar.noVacio(txtIntervalo.getText())) {
                resultado = "Faltan datos";
                txtIntervalo.requestFocus();
            } else if (!validar.isNumber(txtIntervalo.getText())){
                resultado = "El intervalo debe ser un n煤mero";
                txtIntervalo.setText("");
                txtIntervalo.requestFocus();
            }  
        }
        if (!validar.esFecha(txtFecha.getText()).equals("true")){
            resultado = validar.esFecha(txtFecha.getText());
            txtFecha.requestFocus();
            x = 0;
        }      
        return resultado;
    }    
    
    private void llenarTabla() {
        DefaultTableModel modelo = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
               //all cells false
               return false;
            }
        };
        
        modelo.addColumn("Fecha");
        modelo.addColumn("Mensaje");
                              
        tblNotificaciones.setModel(modelo);
        tblNotificaciones.getColumnModel().getColumn(0).setMaxWidth(60);
        tblNotificaciones.getColumnModel().getColumn(0).setMinWidth(60);
        
        indice.clear();
                
        try {
            rs = notificacion.consultar();
            
            while (rs.next()) {
                Object [] ob = new Object[2];
                ob[0] = validar.cambiarFecha(rs.getString("fecha"));
                ob[1] = rs.getString("mensaje");
                                
                indice.addElement(rs.getInt("idNotificacion"));
                modelo.addRow(ob);
            }
            
            
        } catch (SQLException ex) {
            System.out.println("Error en frmNotificaciones.llenarTabla()" + ex.getMessage());
        }
    }
    
    public void vaciarCajas() {
        txtFecha.setText("");
        txtIntervalo.setText("");
        txtMensaje.setText("");
        cboIntervalo.setSelectedIndex(0);
        cbxRepetir.setSelected(false);
    }
    
    public void myInitComponents() {
        pnlAgregar.setVisible(false);
        btnEliminar.setEnabled(false);
        btnMarcarLeido.setEnabled(false);
                
        lblIntervalo.setEnabled(cbxRepetir.isSelected());
        txtIntervalo.setEnabled(cbxRepetir.isSelected());
        cboIntervalo.setEnabled(cbxRepetir.isSelected());
        
        Image imgCancelar = new ImageIcon("src/iconos/cruss.png").getImage();
        ImageIcon iconoCancelar = new ImageIcon(imgCancelar.getScaledInstance(32, 32, Image.SCALE_SMOOTH));
        btnCancelar.setIcon(iconoCancelar);    
        btnCancelar.setSize(32, 32);
        
        Image imgAceptar = new ImageIcon("src/iconos/check.png").getImage();
        ImageIcon iconoAceptar = new ImageIcon(imgAceptar.getScaledInstance(32, 32, Image.SCALE_SMOOTH));
        btnAceptar.setIcon(iconoAceptar);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnMarcarLeido;
    private javax.swing.JComboBox<String> cboIntervalo;
    private javax.swing.JCheckBox cbxRepetir;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblIntervalo;
    private javax.swing.JLabel lblMensaje;
    private javax.swing.JPanel pnlAgregar;
    private javax.swing.JTable tblNotificaciones;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtIntervalo;
    private javax.swing.JTextArea txtMensaje;
    // End of variables declaration//GEN-END:variables
}
